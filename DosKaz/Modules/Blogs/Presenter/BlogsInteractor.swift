//
//  BlogsInteractor.swift
//  Blogs
//
//  Generated by ModuleGenerator.
//  Copyright Â© 2020-05-14 17:21:04 +0000 lobster.kz. All rights reserved.
//
import  SharedCodeFramework

protocol BlogsInteractorInput {
	func loadPosts(with searchText: String?, categoryId: Int?)
	func loadBlogCategories()
}

// MARK: Implementation

class BlogsInteractor: BlogsInteractorInput {

	weak var output: BlogsInteractorOutput!
	
	let paginator = BlogPaginator()
	
	func loadPosts(with searchText: String?, categoryId: Int?) {
		paginator.search = searchText
		paginator.categoryId = categoryId
		paginator.onLoad = CommandWith<BlogResponse> { [weak self] blogResponse in
			self?.output.didload(blogResponse)
		}
		paginator.onFail = CommandWith<Error> { [weak self] error in
			self?.output.didFailLoadBlogResponse(with: error)
		}
		paginator.loadNext()
	}
	
	func loadBlogCategories() {
		APIBlogCategories(onSuccess: { [weak self] (blogCategories) in
			self?.output?.didLoad(blogCategories)
		}, onFailure: { error in
			print(error)
		})
		.dispatch()
	}

}
		
