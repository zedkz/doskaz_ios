//
//  AuthInteractor.swift
//  Auth
//
//  Generated by ModuleGenerator.
//  Copyright Â© 2020-06-17 07:43:27 +0000 lobster.kz. All rights reserved.
//

import FirebaseAuth

protocol AuthInteractorInput {
	func verify(phoneNumber: String)
	func signIn(with verificationCode: String, id verificationID: String)
}

// MARK: Implementation

class AuthInteractor: AuthInteractorInput {

	weak var output: AuthInteractorOutput!
	
	func verify(phoneNumber: String) {
		PhoneAuthProvider.provider().verifyPhoneNumber(phoneNumber, uiDelegate: nil) { [weak self] (verificationID, error) in
			guard let self = self else { return }
			if let error = error {
				self.output?.didFailVerify(with: error)
				return
			}
			
			if let id = verificationID {
				self.output?.didSucceed(with: id)
			}
		}
	}
	
	func signIn(with verificationCode: String, id verificationID: String) {
		
		let credential = PhoneAuthProvider.provider().credential(
			withVerificationID: verificationID,
			verificationCode: verificationCode
		)
		
		Auth.auth().signIn(with: credential) { [weak self] (authResult, error) in
			guard let self = self else { return }
			if let error = error {
				self.output?.didFailSignIn(with: error)
				return
			}
		
			self.output.didSucceedSignIn()
		}
	}

}
