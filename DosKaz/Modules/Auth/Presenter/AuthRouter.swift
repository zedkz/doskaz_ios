//
//  AuthRouter.swift
//  Auth
//
//  Generated by ModuleGenerator.
//  Copyright Â© 2020-06-17 07:43:27 +0000 lobster.kz. All rights reserved.
//

import UIKit

protocol AuthRouterInput {
	func updateProfileTab()
	func showProfile(for vc: UIViewController, origin: AuthOrigin)
	func showDestination(for vc: UIViewController, destination: AuthDestination)
}

// MARK: Implementation

class AuthRouter: AuthRouterInput {
	
	func updateProfileTab() {
		let kw = UIApplication.shared.keyWindow
		let t = (kw?.rootViewController) as? MainTabBarViewController
		let profile = ProfileBuilder().assembleTab()
		t?.viewControllers![3] = profile
	}
	
	func showProfile(for vc: UIViewController, origin: AuthOrigin) {
		switch origin {
		case .tab:
			let profile = ProfileBuilder().assembleTab()
			vc.tabBarController?.viewControllers![3] = profile
		case .anywhere:
			vc.dismiss(animated: true, completion: {
				let kw = UIApplication.shared.keyWindow
				let t = (kw?.rootViewController) as? MainTabBarViewController
				t?.selectedIndex = 3
			})
		}
	}
	
	func showDestination(for vc: UIViewController, destination: AuthDestination) {
		switch destination {
		case .bigForm:
			let form = BigFormBuilder().assembleModule()
			vc.navigationController?.navigationBar.isHidden = false
			vc.navigationController?.pushViewController(form, animated: true)
		case .complaint:
			let complaintVC = ComplaintBuilder().assembleModule()
			vc.navigationController?.navigationBar.isHidden = false
			vc.navigationController?.pushViewController(complaintVC, animated: true)
		}
	}

}

enum AuthDestination {
	case bigForm
	case complaint
}
