//
//  SearchResultsViewControllerPresenter.swift
//  SearchResultsViewController
//
//  Generated by ModuleGenerator.
//  Copyright Â© 2020-03-01 13:52:49 +0000 lobster.kz. All rights reserved.
//
import SharedCodeFramework
		
class SearchResultsViewControllerPresenter: SearchResultsViewControllerModuleInput {
	
	weak var view: SearchResultsViewControllerViewInput!
	var interactor: SearchResultsViewControllerInteractorInput!
	var router: SearchResultsViewControllerRouterInput!

	var didPressShowOnMap: Command = .nop
}


// MARK: ViewController output protocol

protocol SearchResultsViewControllerViewOutput {
	func viewIsReady()
	func initView(with command: Command)
}

extension SearchResultsViewControllerPresenter: SearchResultsViewControllerViewOutput {
	
	func initView(with command: Command) {
		self.didPressShowOnMap = command
	}
	
	func viewIsReady() {
		view.setupInitialState()
		view.updateSearchResults = CommandWith<String> { searchText in
			self.interactor.search(for: searchText, with: 9103)
		}
	}

}


// MARK: Interactor output protocol

protocol SearchResultsViewControllerInteractorOutput: class {
	func didFind(_ results: SearchResults)
	func didFailSearch(with error: Error)
}

extension SearchResultsViewControllerPresenter: SearchResultsViewControllerInteractorOutput {
	func didFind(_ results: SearchResults) {
		let searchResultsToShow = results.map {
			BasicCell.Props(
				text: $0.title,
				icon:"available_32",
				rightIcon: "complaint_button"
			)
		}
		self.view.showResults(with: searchResultsToShow)
	}
	
	func didFailSearch(with error: Error) {
		print("didFailSearch: ",error.localizedDescription)
	}
}

