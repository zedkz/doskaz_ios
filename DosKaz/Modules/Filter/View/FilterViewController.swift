//
//  FilterViewController.swift
//  Filter
//
//  Generated by ModuleGenerator.
//  Copyright Â© 2020-05-03 14:19:21 +0000 lobster.kz. All rights reserved.
//

import SharedCodeFramework

// MARK: View input protocol

protocol FilterViewInput where Self: UIViewController {
	func setupInitialState()
	func makeForm(with filter: Filter)
	func updateForm(with filter: Filter)
	
	var onRightButtonTouch: CommandWith<OverallScore> { get set }
}

extension FilterViewController: FilterViewInput {

	func setupInitialState() {
		view.backgroundColor = .white
		navigationItem.title = l10n(.filter)
		navigationItem.rightBarButtonItem = UIBarButtonItem(
			barButtonSystemItem: .cancel,
			target: self,
			action: #selector(closeFilterForm)
		)
	}
		
	func updateForm(with filter: Filter) {
		self.filter = filter
	}
	
	func makeForm(with filter: Filter) {
		self.filter = filter
	}
	
	@objc func closeFilterForm() {
		dismiss(animated: true, completion: nil)
	}

}

class FilterViewController: UIViewController {

	var output: FilterViewOutput!
	
	var onRightButtonTouch: CommandWith<OverallScore> = .nop
	
	var filter = Filter() {
		didSet {
			print("Filter has been set")
		}
	}

	// MARK: Life cycle
	override func viewDidLoad() {
		super.viewDidLoad()
		output.viewIsReady()
	}

}
