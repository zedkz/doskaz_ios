//
//  VenueDescriptionViewController.swift
//  VenueDescription
//
//  Generated by ModuleGenerator.
//  Copyright Â© 2020-04-27 16:23:49 +0000 lobster.kz. All rights reserved.
//

import UIKit

// MARK: View input protocol

protocol VenueDescriptionViewInput where Self: UIViewController {
	func setupInitialState()
	var rootView: VenueDescriptionView { get set }
	func showAlert(title: String, message: String, actions: [Action])
}

extension VenueDescriptionViewController: VenueDescriptionViewInput {

	func setupInitialState() {
		view.backgroundColor = .white
		view.addSubview(rootView)
		rootView.addConstraintsProgrammatically.pinToSuper()
	}
	
	func showAlert(title: String, message: String, actions: [Action]) {
		let alertController = GenericAlertPresenter(title: title, message: message, actions: actions)
		alertController.present(in: self)
	}

}

class VenueDescriptionViewController: UIViewController {

	var output: VenueDescriptionViewOutput!
	var rootView = VenueDescriptionView()

	// MARK: Life cycle
	override func viewDidLoad() {
		super.viewDidLoad()
		output.viewIsReady()
	}

}

struct GenericAlertPresenter {
	let title: String
	var message: String?
	var style: UIAlertController.Style = .alert
	
	let actions: [Action]
	
	func present(in viewController: UIViewController) {
		let alert = UIAlertController(
			title: title,
			message: message,
			preferredStyle: style
		)
		
		actions.forEach { action in
			let uiAction = UIAlertAction(title: action.title, style: action.style) { _ in
				action.handler()
			}
			alert.addAction(uiAction)
		}
		
		viewController.present(alert, animated: true)
	}
}

struct Action {
	let title: String
	var handler: () -> Void = {  }
	var style: UIAlertAction.Style = .default
}
