//
//  VenuePhotosViewController.swift
//  VenuePhotos
//
//  Generated by ModuleGenerator.
//  Copyright Â© 2020-05-27 10:33:42 +0000 lobster.kz. All rights reserved.
//

import UIKit
import SharedCodeFramework

// MARK: View input protocol

protocol VenuePhotosViewInput where Self: UIViewController {
	func setupInitialState()
	func update(_ photos: [Photo])
}

class VenuePhotosViewController: UIViewController, VenuePhotosViewInput {
	
	var output: VenuePhotosViewOutput!
	
	private let collectionView = ContentSizedCollectionView(frame: .zero, collectionViewLayout: UICollectionViewFlowLayout())
	private var collectionDataSource: CollectionViewDataSource<VenuePhotoCell.Props,VenuePhotoCell>!
	private var delegate = VenueCollectionDelegate()
	
	func setupInitialState() {
		view.backgroundColor = .white
		view.addSubview(collectionView)
		collectionView.addConstraintsProgrammatically
			.pinToSuperSafeArea(inset: UIEdgeInsets(top: 20, left: 16, bottom: 20, right: 16))
			.set(my: .height, .greaterThanOrEqual, to: 90)
		configureCollectionView()
	}
	
	private func configureCollectionView() {
		let flowLayout = UICollectionViewFlowLayout()
		flowLayout.scrollDirection = .vertical
		collectionView.collectionViewLayout = flowLayout
		collectionView.alwaysBounceVertical = true
		collectionView.showsVerticalScrollIndicator = true
		collectionView.backgroundColor = .white
		collectionView.delegate = delegate
		collectionDataSource = CollectionViewDataSource(collectionView) { $1.props = $0 }
		collectionView.dataSource = collectionDataSource
	}
	
	func update(_ photos: [Photo]) {

		let imageCollectionViewCells: [VenuePhotoCell.Props] = photos.map { (photo: Photo) in
			return VenuePhotoCell.Props(
				image: photo.previewUrl
			)
		}
		
		var allCells = [VenuePhotoCell.Props]()
		
		allCells.append(contentsOf: imageCollectionViewCells)
		
		collectionDataSource.cellsProps = allCells
		collectionView.reloadData()
	}
}

// MARK: Life cycle

extension VenuePhotosViewController {
	
	override func viewDidLoad() {
		super.viewDidLoad()
		output.viewIsReady()
	}

}
